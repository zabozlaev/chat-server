type User {
  id: Int!
  email: String!
  username: String!
  # password: String!
  channels: [Channel!]!
}

input createUserInput {
  email: String!
  password: String!
  username: String!
}

# email: String!, password: String!, username: String!

type AuthPayload {
  accessToken: String
  refreshToken: String
  errors: [Error!]
}

type RegisterPayload {
  success: Boolean!
  user: User
  errors: [Error!]
}

type Query {
  hello: String
  me: User
  allUsers: [User!]!
}
type Mutation {
  register(input: createUserInput!): RegisterPayload
  login(email: String!, password: String!): AuthPayload!
  refreshToken(token: String!): AuthPayload!
}
